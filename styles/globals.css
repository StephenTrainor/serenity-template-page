@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

/* basic colors and styles that are defined for convenient reuse */
:root {
  --white: #FFFFFF;
  --black: #000000;
  --background: #f6f6f6;
  --light-hover: #e8e8e8;
  --border: #d9d9d9;
  --greyground: #aaaaaa;
  --foreground: #171717;
  --serenity-midnight: #162560;
  --cornflower: #607ae3;
  --dark-text: #000000;
  --light-text: #FFFFFF;
}

/* Sets the basic features of each page that will be printed */
@page {
  margin: 4mm;
  background-color: var(--white);

  /* standard letter size, for printing */
  size: 8.5in 11in;

  /* a page counter that is independent of the react components, placed using the @top-right-corner selector */
  @top-right-corner {
    margin-right: 20px;
    margin-top: 20px;
    content: counter(page);
  }
}

.dark-text {
  color: var(--dark-text);
}

.page {
  @apply flex flex-col;
  background-color: var(--white);
  position: relative;
  page-break-after: always;
  page-break-inside: auto;
}

/* Avoid creating an extra blank page below the last page */
.page:last-of-type {
  page-break-after: avoid;
}

/* creates a border around a div to display a thin line for signatures */
.signature-line {
  width: 90%;
  @apply mx-auto;
  border-top: thin solid var(--black);
}

.serenity-text {
  color: var(--serenity-midnight);
}

.serenity-divider {
  @apply mx-auto;
  width: 90%;
  border: 0.85px var(--cornflower) solid;
}

.additional-comments-border {
  @apply round-soft border;
  height: 24rem;
  border-color: var(--border);
}

.main-page-container {
  @apply flex flex-col mx-auto items-center;
  min-width: 80%;
  max-width: 80%;
}

.templates-container {
  @apply round-soft border px-7 py-5;
  border-color: var(--border);
}

.template-container {
  @apply object-center mx-auto;
  display: block;
  max-width: 80%;
  min-width: 80%;
}

.template-preview {
  @apply p-2 m-3;
  cursor: pointer;
  background-color: var(--white);
  border-radius: 12px;
  filter: drop-shadow(0 0.3rem 0.2rem var(--greyground));
  width: 32vw;
}

.template-preview:hover {
  background-color: var(--light-hover);
}

/* ensure that no page break cuts a row in half, pushing the row to the next page automatically */
table { page-break-inside:auto }
tr    { break-inside: avoid; page-break-inside:avoid; page-break-after:auto }

/* the goal of the css for the table is to get a table with grid lines but rounded-corners, I was able to achieve this
using some interesting css selectors but is definitely not necessary */

/* first create a border around the entire table */
table.checklist-table {
  @apply round-soft text-sm;
  width: 90%;
  border-collapse:separate;
  border-spacing: 0;
  border: solid var(--border) 1px;
}

/* for each table cell (including headers), add a bottom and right border to create the illusion of a box around each
cell */
table.checklist-table > thead > tr > th,
table.checklist-table > tbody > tr > td {
  border-bottom: solid var(--border) 1px;
  border-right: solid var(--border) 1px;
  padding: 4px;
}

/* ensure that empty cells do not add border lines */
td:empty, tr:empty {
  border: none;
}

/* ensure that table cells at the last row do not add an extra border line to the table */
table.checklist-table > tbody > tr:last-of-type {
  td {
    border-bottom: none;
  }
}

/* ensure that right-most cells do not add an extra border line to the table */
table.checklist-table > thead > tr > th:last-of-type {
  border-right: none;
}

table.checklist-table > tbody > tr > td:last-of-type {
  border-right: none;
}

.title {
  @apply text-5xl serenity-text;
  text-align: center;
  font-weight: 300;
}

.second-title {
  @apply text-4xl serenity-text;
  text-align: center;
  font-weight: 300;
}

.section-title {
  @apply text-2xl serenity-text;
}

.subtitle {
  @apply text-2xl;
  text-align: center;
  font-weight: 300;
  color: var(--dark-text);
}

.subparagraph {
  @apply text-sm;
}

.tiny-text {
  font-size: 10px;
  line-height: 16px;
  text-align: center;
}

.serenity-dark-blue-bg {
  background-color: var(--serenity-midnight);
}

.button-light {
  padding: 6px 12px;
  cursor: pointer;
  background-color: var(--white);
  color: var(--serenity-midnight);
}

.button-light:hover {
  background-color: var(--background);
}

.button-dark {
  @apply round-soft flex flex-row justify-center;
  cursor: pointer;
  background-color: var(--serenity-midnight);
  color: var(--white);
}

.button-dark:hover {
  background-color: var(--cornflower);
}

.button-light-blue {
  cursor: pointer;
  background-color: var(--cornflower);
  border-width: 1px;
  color: var(--background);
}

.button-light-blue:hover {
  background-color: var(--serenity-midnight);
}

.button-outline {
  @apply round-soft flex flex-row justify-center;
  border-color: var(--border);
  cursor: pointer;
  border-width: 1px;
  color: var(--foreground);
}

.button-outline:hover {
  background-color: var(--light-hover);
}

.nav-item {
  display: flex;
  flex-direction: row;
  padding: 4px 8px;
  cursor: pointer;
  border-color: var(--serenity-midnight);
  border-width: 1px;
  color: var(--light-text);
}

.nav-item:hover {
  border-radius: 9999px;
  border-color: var(--background);
}

.multi-line-input {
  @apply text-sm;
  word-wrap: break-word;
  padding: 12px;
  resize: none;
  border-width: 1px;
  border-radius: 6px;
  border-color: var(--border);
}

.multi-line-input:focus {
  outline: none;
}

.single-line-input {
  @apply text-sm;
  padding: 8px;
  border-width: 1px;
  border-radius: 9999px;
  border-color: var(--border);
}

.share-dropdown-container {
  @apply absolute round-soft mt-1;
  border-width: 1px;
  border-color: var(--border);
}

.share-dropdown-item {
  @apply ml-auto flex flex-row p-1;
}

.share-dropdown-item > p {
  @apply my-auto m-1;
}

.round-soft {
  border-radius: 10px;
}

.half {
  max-width: 50%;
  min-width: 50%;
}

.flex1 {
  flex: 1;
}

body {
  color: var(--foreground);
  background: var(--background);

  /* set Serenity's font to be the default for all text */
  font-family: 'Montserrat', sans-serif;
}

/* make sure user's cursor changes on any button to indicate that it is clickable */
button {
  cursor: pointer;
}
